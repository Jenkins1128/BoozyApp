// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RestaurantPage /> should render correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
  testID="container"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
    testID="inner"
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#EB8873",
          "flex": 1,
          "justifyContent": "center",
          "width": "100%",
        }
      }
      testID="header"
    >
      <Image
        source={
          Object {
            "uri": "https://boozyimage.s3.us-east-2.amazonaws.com/logo.png",
          }
        }
        style={
          Object {
            "flex": 2,
            "height": "100%",
            "width": "100%",
          }
        }
        testID="logoImage"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 10,
          }
        }
        testID="titleHeader"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 25,
              "fontWeight": "bold",
              "marginLeft": 10,
            }
          }
          testID="restaurantName"
        >
          
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "margin": 10,
              "marginBottom": 0,
              "opacity": 1,
            }
          }
          testID="favoriteButton"
        >
          <Text />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginHorizontal": 15,
          }
        }
        testID="titleBody"
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginBottom": 0,
            }
          }
          testID="infoContainer"
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 14,
                "marginBottom": 0,
              }
            }
            testID="categoriesText"
          >
            
             • 
            0
            ★
          </Text>
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 14,
                "marginBottom": 0,
              }
            }
            testID="phoneNumberText"
          >
            
             • 
            0
             Yelp Reviews
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "paddingBottom": 0,
            }
          }
          testID="starRatingContainer"
        >
          <View
            pointerEvents="auto"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              forwardedRef={[Function]}
              style={Object {}}
            >
              <View
                accessibilityRole="button"
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              forwardedRef={[Function]}
              style={Object {}}
            >
              <View
                accessibilityRole="button"
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              forwardedRef={[Function]}
              style={Object {}}
            >
              <View
                accessibilityRole="button"
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              forwardedRef={[Function]}
              style={Object {}}
            >
              <View
                accessibilityRole="button"
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <View
              forwardedRef={[Function]}
              style={Object {}}
            >
              <View
                accessibilityRole="button"
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "white",
          "flex": 1,
          "width": "100%",
        }
      }
      testID="scrollContainer"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
        testID="menuItemsTitleContainer"
      >
        <Text
          style={
            Object {
              "color": "lightgrey",
              "fontSize": 20,
              "fontWeight": "bold",
              "marginTop": 0,
              "padding": 10,
            }
          }
          testID="menuTitle"
        >
          Menu items
        </Text>
        <View
          style={
            Object {
              "marginRight": 15,
            }
          }
          testID="menuButtonContainer"
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#EB8873",
                "borderRadius": 20,
                "opacity": 1,
                "padding": 7,
                "width": 110,
              }
            }
            testID="menuButton"
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontWeight": "bold",
                }
              }
              testID="menuItemText"
            >
              + Menu Item
            </Text>
          </View>
        </View>
      </View>
      <RCTScrollView
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 30,
          "padding": 20,
          "position": "absolute",
          "transform": Array [
            Object {
              "translateY": 1000,
            },
          ],
        }
      }
      testID="subView"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
        testID="addMenuItemHeader"
      >
        <View
          style={
            Object {
              "marginRight": 20,
            }
          }
          testID="addMenuItemTitleContainer"
        >
          <Text
            style={
              Object {
                "color": "#EB8873",
                "fontSize": 20,
                "fontWeight": "bold",
              }
            }
            testID="addMenuItemTitle"
          >
            Add Menu Item
          </Text>
        </View>
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "borderRadius": 20,
                "justifyContent": "center",
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="cancelButton"
          >
            <Text
              style={
                Object {
                  "color": "#EB8873",
                  "fontWeight": "bold",
                }
              }
              testID="cancelText"
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
      <TextInput
        allowFontScaling={true}
        keyboardType="numeric"
        multiline={false}
        onChangeText={[Function]}
        placeholder="Enter Price"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "fontSize": 18,
            "marginBottom": 20,
            "textAlign": "center",
          }
        }
        testID="priceInput"
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        multiline={false}
        onChangeText={[Function]}
        placeholder="Enter menu item"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "fontSize": 18,
            "marginBottom": 20,
            "textAlign": "center",
          }
        }
        testID="descriptionInput"
        underlineColorAndroid="transparent"
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#EB8873",
            "borderRadius": 20,
            "justifyContent": "center",
            "opacity": 1,
            "padding": 10,
          }
        }
        testID="addMenuItemButton"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontWeight": "bold",
            }
          }
          testID="addMenuItemText"
        >
          Submit
        </Text>
      </View>
    </View>
  </View>
</View>
`;
